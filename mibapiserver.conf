sudo apt update
sudo apt upgrade -y
sudo apt-get install nginx -y
sudo apt-get update
sudo apt-get install software-properties-common -y
sudo add-apt-repository ppa:ondrej/php -y
sudo apt-get install php8.0 php8.0-mbstring php8.0-gettext php8.0-zip php8.0-fpm php8.0-curl php8.0-mysql php8.0-gd php8.0-cgi php8.0-soap php8.0-sqlite3 php8.0-xml php8.0-redis php8.0-bcmath php8.0-imagick php8.0-intl -y
sudo apt-get remove composer -y
sudo php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
sudo php composer-setup.php --install-dir=/usr/bin --filename=composer
sudo composer self-update --1
sudo composer self-update --2
sudo apt update
cd ~
git clone https://github.com/Rajasekhar-k1223/mib-BackEnd.git
cd /var/www/html/
sudo mkdir mib-api
sudo chmod -R 777 mib-api
cd ~
sudo cp -R mib-BackEnd/mib-api.zip /var/www/html/mib-api
sudo apt install unzip
cd /var/www/html/mib-api/
unzip mib-api.zip
cd ~
cd /etc/nginx/sites-enabled/
cat << EOF >> mibook
server {
    server_name apilistelsea.co.in www.apilistelsea.co.in;
    root /var/www/html/mib-api/public;
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";
    index index.php;
    charset utf-8;
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }
    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }
    error_page 404 /index.php;
    location ~ \.php$ {
        fastcgi_pass unix:/var/run/php/php8.0-fpm.sock;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include fastcgi_params;
    }
    location ~ /\.(?!well-known).* {
        deny all;
    }
#   listen 443 ssl; # managed by Certbot
#    ssl_certificate /etc/letsencrypt/live/apilistelsea.co.in/fullchain.pem; # managed by Certbot
#    ssl_certificate_key /etc/letsencrypt/live/apilistelsea.co.in/privkey.pem; # managed by Certbot
#    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
#    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}
server {
    if ($host = www.apilistelsea.co.in) {
        return 301 https://$host$request_uri;
    } # managed by Certbot
    if ($host = apilistelsea.co.in) {
        return 301 https://$host$request_uri;
    } # managed by Certbot
    listen 80;
    server_name apilistelsea.co.in www.apilistelsea.co.in;
    return 404; # managed by Certbot
}
server {
    server_name socketmib.in www.socketmib.in;
    location / {
    include proxy_params;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $host;
      proxy_pass http://localhost:3006;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
   # listen 443 ssl; # managed by Certbot
   # ssl_certificate /etc/letsencrypt/live/socketmib.in/fullchain.pem; # managed by Certbot
   #  ssl_certificate_key /etc/letsencrypt/live/socketmib.in/privkey.pem; # managed by Certbot
   #  include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
   #  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}
server {
    if ($host = www.socketmib.in) {
        return 301 https://$host$request_uri;
    } # managed by Certbot
    if ($host = socketmib.in) {
        return 301 https://$host$request_uri;
    } # managed by Certbot
    listen 80;
    server_name socketmib.in www.socketmib.in;
    return 404; # managed by Certbot
}
EOF
#sudo sed -i '17ifastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;' mibook
# sudo apt update
# sudo apt install ufw
# echo "y" | sudo ufw enable
# sudo ufw allow 22
# sudo ufw allow 'Nginx Full'
# sudo ufw delete allow 'Nginx HTTP'
# sudo apt install certbot python3-certbot-nginx -y
# sudo certbot --nginx 
# echo "2" | sudo certbot --nginx -d apilistelsea.co.in -d www.apilistelsea.co.in
# sudo rm mibook
# cat << EOF >> mibook
# server {
#     server_name apilistelsea.co.in www.apilistelsea.co.in;
#     root /var/www/html/mib-api/public;
#     add_header X-Frame-Options "SAMEORIGIN";
#     add_header X-XSS-Protection "1; mode=block";
#     add_header X-Content-Type-Options "nosniff";
#     index index.php;
#     charset utf-8;
#     location / {
#         try_files $uri $uri/ /index.php?$query_string;
#     }
#     location = /favicon.ico { access_log off; log_not_found off; }
#     location = /robots.txt  { access_log off; log_not_found off; }
#     error_page 404 /index.php;
#     location ~ \.php$ {
#         fastcgi_pass unix:/var/run/php/php8.0-fpm.sock;
#         fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
#         include fastcgi_params;
#     }
#     location ~ /\.(?!well-known).* {
#         deny all;
#     }
#    listen 443 ssl; # managed by Certbot
#    ssl_certificate /etc/letsencrypt/live/apilistelsea.co.in/fullchain.pem; # managed by Certbot
#    ssl_certificate_key /etc/letsencrypt/live/apilistelsea.co.in/privkey.pem; # managed by Certbot
#    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
#    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
# }
# server {
#     if ($host = www.apilistelsea.co.in) {
#         return 301 https://$host$request_uri;
#     } # managed by Certbot
#     if ($host = apilistelsea.co.in) {
#         return 301 https://$host$request_uri;
#     } # managed by Certbot
#     listen 80;
#     server_name apilistelsea.co.in www.apilistelsea.co.in;
#     return 404; # managed by Certbot
# }
# server {
#     server_name socketmib.in www.socketmib.in;
#     location / {
#     include proxy_params;
#       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#       proxy_set_header Host $host;
#       proxy_pass http://localhost:3006;
#       proxy_http_version 1.1;
#       proxy_set_header Upgrade $http_upgrade;
#       proxy_set_header Connection "upgrade";
#     }
#     listen 443 ssl; # managed by Certbot
#     ssl_certificate /etc/letsencrypt/live/socketmib.in/fullchain.pem; # managed by Certbot
#     ssl_certificate_key /etc/letsencrypt/live/socketmib.in/privkey.pem; # managed by Certbot
#     include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
#     ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
# }
# server {
#     if ($host = www.socketmib.in) {
#         return 301 https://$host$request_uri;
#     } # managed by Certbot
#     if ($host = socketmib.in) {
#         return 301 https://$host$request_uri;
#     } # managed by Certbot
#     listen 80;
#     server_name socketmib.in www.socketmib.in;
#     return 404; # managed by Certbot
# }
# EOF
# #sudo sed -i '17ifastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;' mibook
# sudo systemctl restart nginx.service
